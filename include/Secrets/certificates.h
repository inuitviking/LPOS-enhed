/**
 * This is the client certificate of this Arduino.
 * This is being sendt to the MQTT broker over TLS.
 */
const char arduinoCertificate[] = "-----BEGIN CERTIFICATE-----\n"
								  "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\n"
								  "SFT+NR3Jv9Vopr0yM3Xpog==\n"
								  "-----END CERTIFICATE-----";

/**
 * This is the client certificate key for this Arduino.
 */
const char arduinoKey[]  = "-----BEGIN PRIVATE KEY-----\n"
						   "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\n"
						   "u+6ueqOEmfOylLOzBezW/Z85BznHgik=\n"
						   "-----END PRIVATE KEY-----";

#ifndef _CERTIFICATES_H_
#define _CERTIFICATES_H_

#ifdef __cplusplus
extern "C"
{
#endif

/* This file is auto-generated by the pycert_bearssl tool.  Do not change it manually.
 * Certificates are BearSSL br_x509_trust_anchor format.  Included certs:
 *
 * Index:    0
 * Label:    192.168.80.2
 * Subject:  1.2.840.113549.1.9.1=webmaster@mac.dk,CN=192.168.80.2,O=Mac,L=Aabenraa,ST=Syddanmark,C=DK
 *
 * Author addition:	This CA root certificate has worked fine regardless of the CN mentioned above,
 * 					but realistically, the CA certificate should be changed to fit the correct CN.
 */

#define TAs_NUM 1

static const unsigned char TA_DN0[] = {
		0x30, 0x7b, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
		0x02, 0x44, 0x4b, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x08,
		0x0c, 0x0a, 0x53, 0x79, 0x64, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x72, 0x6b,
		0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x08, 0x41,
		0x61, 0x62, 0x65, 0x6e, 0x72, 0x61, 0x61, 0x31, 0x0c, 0x30, 0x0a, 0x06,
		0x03, 0x55, 0x04, 0x0a, 0x0c, 0x03, 0x4d, 0x61, 0x63, 0x31, 0x15, 0x30,
		0x13, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x0c, 0x31, 0x39, 0x32, 0x2e,
		0x31, 0x36, 0x38, 0x2e, 0x38, 0x30, 0x2e, 0x32, 0x31, 0x1f, 0x30, 0x1d,
		0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16,
		0x10, 0x77, 0x65, 0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x40, 0x6d,
		0x61, 0x63, 0x2e, 0x64, 0x6b,
};

static const unsigned char TA_RSA_N0[] = {
		0xe6, 0x44, 0x37, 0x2e, 0xb3, 0x87, 0xab, 0xe8, 0xf4, 0xc3, 0xb6, 0x0f,
		0xb4, 0x81, 0xb6, 0xfa, 0xbc, 0x41, 0x6e, 0xa9, 0xee, 0x3a, 0x63, 0x6d,
		0xea, 0xdd, 0x40, 0x6c, 0xc4, 0xff, 0xef, 0x6a, 0xbe, 0xc4, 0xae, 0x2e,
		0x68, 0xe0, 0xc4, 0x29, 0xd8, 0x73, 0xae, 0x1e, 0x32, 0xad, 0xb5, 0x9a,
		0x62, 0x1c, 0x74, 0xc7, 0xf6, 0x8e, 0xd6, 0xed, 0x7d, 0x5e, 0xab, 0x0f,
		0xc3, 0xcd, 0x02, 0x9e, 0x8b, 0x3f, 0x50, 0xd8, 0xbe, 0xda, 0x69, 0x69,
		0x23, 0x1e, 0xcc, 0x59, 0xdc, 0x1d, 0xb3, 0x7c, 0x62, 0xf9, 0xaa, 0x79,
		0x77, 0x06, 0x0e, 0x42, 0x19, 0xfb, 0xf9, 0x0d, 0x2a, 0xa8, 0x12, 0xfe,
		0xe8, 0xe6, 0x1c, 0x8d, 0xf7, 0x21, 0x3f, 0xc8, 0x15, 0x38, 0xed, 0x31,
		0xd6, 0x2a, 0x1b, 0x40, 0x97, 0x7a, 0x15, 0xf5, 0xe9, 0x8d, 0xb9, 0x97,
		0xe0, 0x6a, 0xca, 0xf6, 0x48, 0x65, 0x25, 0x47, 0x44, 0xfd, 0xd1, 0x3b,
		0xc8, 0xc9, 0xcc, 0x09, 0xa2, 0x48, 0x0e, 0x9c, 0x27, 0x50, 0x8e, 0xf3,
		0xfe, 0xb2, 0x5e, 0x4f, 0x2f, 0x06, 0xf1, 0x46, 0xb1, 0xa0, 0x93, 0xb0,
		0xc9, 0xfd, 0x14, 0xb5, 0x19, 0x0b, 0x0d, 0x85, 0x26, 0xb5, 0x46, 0x40,
		0xd1, 0xf7, 0xaf, 0xd5, 0x78, 0x1f, 0xc5, 0x31, 0x26, 0x9f, 0x10, 0x86,
		0x6f, 0x14, 0x70, 0xc6, 0x10, 0x6c, 0xfa, 0x8b, 0xb7, 0x02, 0x80, 0x97,
		0xae, 0x49, 0x6b, 0xe3, 0xf6, 0x7d, 0x4b, 0xfe, 0xa4, 0x5d, 0x4f, 0x04,
		0xbd, 0xec, 0xd3, 0x00, 0x55, 0x8a, 0x58, 0x9e, 0x24, 0x1c, 0x92, 0x93,
		0x71, 0x4f, 0x86, 0x2a, 0x7a, 0xe5, 0x2c, 0x08, 0xf7, 0xf8, 0xb2, 0x05,
		0xa1, 0x03, 0x7c, 0xf0, 0x5a, 0xc2, 0xe6, 0xc4, 0x32, 0x89, 0x4d, 0xa5,
		0xd8, 0x6e, 0x62, 0x59, 0xe5, 0x9a, 0x7b, 0x09, 0xac, 0x1c, 0x88, 0xcb,
		0x45, 0xce, 0x47, 0x6c, 0x5f, 0xe8, 0x72, 0xaf, 0xdb, 0xc6, 0xe4, 0xf7,
		0x15, 0xee, 0xf6, 0x3e, 0x76, 0x51, 0xbf, 0x4c, 0x68, 0x2f, 0xba, 0x90,
		0xef, 0x95, 0x61, 0xa9, 0x6e, 0xb7, 0x22, 0x16, 0x41, 0x64, 0x98, 0xd1,
		0x66, 0x92, 0x53, 0x7e, 0x8c, 0xd4, 0x06, 0x72, 0x52, 0x88, 0xf8, 0x92,
		0xbe, 0x4d, 0xa1, 0xf2, 0x2c, 0x20, 0x7b, 0x0c, 0xf1, 0x79, 0x2e, 0xc2,
		0xdc, 0x0a, 0x15, 0x2c, 0xdb, 0x68, 0x06, 0x89, 0xd5, 0xa6, 0xe1, 0x73,
		0xd8, 0xf4, 0x7d, 0x38, 0x28, 0xac, 0x7e, 0x74, 0xf9, 0x6c, 0x34, 0x62,
		0xc9, 0xa9, 0xd2, 0x68, 0xad, 0x3b, 0xf9, 0x5b, 0xc1, 0x41, 0xf3, 0xae,
		0x37, 0x6a, 0x43, 0xdb, 0xb3, 0x11, 0x9a, 0x10, 0x06, 0x3e, 0x5c, 0x71,
		0xbf, 0x49, 0x50, 0xe5, 0x15, 0x7c, 0x7c, 0x66, 0xcb, 0x58, 0x19, 0x85,
		0xe1, 0x0b, 0x40, 0xca, 0x95, 0xc5, 0x51, 0xe7, 0x8c, 0xd5, 0xb2, 0xa9,
		0x00, 0x97, 0xd6, 0x52, 0x2c, 0x81, 0x43, 0x02, 0x21, 0x0a, 0xf9, 0x6a,
		0x75, 0xc5, 0xec, 0x5a, 0x9b, 0xbf, 0xc9, 0xbd, 0xfc, 0x5e, 0x47, 0x12,
		0x2b, 0xfe, 0x09, 0xbc, 0xff, 0x5a, 0xe1, 0x4a, 0x01, 0x4a, 0x39, 0x95,
		0x02, 0x82, 0xf7, 0xcb, 0x30, 0x32, 0x44, 0x49, 0x17, 0x7f, 0x39, 0x1c,
		0x0b, 0x44, 0x6d, 0x6c, 0x3d, 0xcd, 0xff, 0x09, 0x38, 0xc8, 0xd4, 0xe3,
		0xcc, 0x7b, 0x5e, 0x29, 0x93, 0xa0, 0x49, 0x89, 0xb4, 0xea, 0xbe, 0x5a,
		0xd4, 0x51, 0xf6, 0x24, 0x5e, 0xb0, 0x68, 0xe1, 0x36, 0x99, 0x7c, 0x5e,
		0xd3, 0x36, 0x7a, 0x06, 0xff, 0x4d, 0x9f, 0x57, 0x1a, 0x93, 0xc9, 0x78,
		0x35, 0xc3, 0x23, 0xbf, 0xe8, 0xfe, 0xdd, 0xc9, 0x53, 0xbe, 0xf9, 0x40,
		0x1e, 0x7a, 0x2d, 0xce, 0xcc, 0x85, 0x20, 0xe6, 0x73, 0xe3, 0x1f, 0x76,
		0xf3, 0x77, 0x32, 0x9e, 0xc8, 0x4f, 0x4a, 0x93,
};

static const unsigned char TA_RSA_E0[] = {
		0x01, 0x00, 0x01,
};

static const br_x509_trust_anchor TAs[] = {
		{
				{ (unsigned char *)TA_DN0, sizeof TA_DN0 },
				BR_X509_TA_CA,
				{
						BR_KEYTYPE_RSA,
						{ .rsa = {
								(unsigned char *)TA_RSA_N0, sizeof TA_RSA_N0,
								(unsigned char *)TA_RSA_E0, sizeof TA_RSA_E0,
						} }
				}
		},
};

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* ifndef _CERTIFICATES_H_ */