// from mkr1000-client.crt
const char my_cert[] = "-----BEGIN CERTIFICATE-----\n"
					   "MIIFfTCCA2UCFCarrJ9KRWEJUaPaP1U9UUsIzz1vMA0GCSqGSIb3DQEBCwUAMHsx\n"
					   "CzAJBgNVBAYTAkRLMRMwEQYDVQQIDApTeWRkYW5tYXJrMREwDwYDVQQHDAhBYWJl\n"
					   "bnJhYTEMMAoGA1UECgwDTWFjMRUwEwYDVQQDDAwxOTIuMTY4LjgwLjIxHzAdBgkq\n"
					   "hkiG9w0BCQEWEHdlYm1hc3RlckBtYWMuZGswHhcNMjIwODE3MjIyOTQzWhcNMzIw\n"
					   "ODE3MjIyOTQzWjB7MQswCQYDVQQGEwJESzETMBEGA1UECAwKU3lkZGFubWFyazER\n"
					   "MA8GA1UEBwwIQWFiZW5yYWExDDAKBgNVBAoMA01hYzEWMBQGA1UEAwwNMTkyLjE2\n"
					   "OC44MC40MzEeMBwGCSqGSIb3DQEJARYPd2ViYWRtaW5AbWFjLmRrMIICIjANBgkq\n"
					   "hkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA1i7kC2MGJKZyEWpOSY6zmnSqagqyfC87\n"
					   "eAmrJeSlV0F0YVeVivHHujA6HfL11909RDe+IuMGWhD9GUV/aYvoFhIDf5kRvwKo\n"
					   "pRba7JKldOVanaNLB8gx32STUa3pBmdwlCPpeHgCS/TNIS/OQ0x7WsBRn+vmG17m\n"
					   "yR8/UD72p+kMQMzB/t/7JIHnJqzwDHNLUlZeSXns1x/s9rPGsKvoe74/vPzOc7vf\n"
					   "kZljTJn5ZQsgB5vkEiS6R2b+qEf17ZET/RF8+fUwHeDFSZAOQjah7bRQcELsdqIC\n"
					   "oS/jifra65zYbp9zYWd+BEFnO77WeDMSp1LIYgJTFeEYPB3IsTnIjkIZBVE8P41d\n"
					   "TySGIVJ34H7G11tXZ/OxJA3HzF/SmEvJOgu5USG+VhK9IT7lkRddZunBlaDu3eSl\n"
					   "IogxOE+eyxOxZQ+s13qqJzAnSjaVg53yYMLs+rwYwWogHIkcv32mrdax8Uj4lK2L\n"
					   "llivNGWtiLxP770PTX4ffBPvz27Irq9x2ZY9meAMnJCZu8loQuKmqTLyhDM91gwY\n"
					   "6gHCqXYFMTYKElB1+u21y1Ls+OYXy8N+QJAQ8CTYtMn+kNkZkvyfF4QUgRbAFYJb\n"
					   "ceaBD9lxIgj3DghSPO3z4xs/sKk2c9JwQ0oEVLJMMI9EUJiMJazgSQgaEJr0yj+f\n"
					   "4+oZldCEv8UCAwEAATANBgkqhkiG9w0BAQsFAAOCAgEAdACd29WfIcNEHCPpqEvh\n"
					   "Z/K8pXuvimQm9rzQTrTyT8QxU1LB7cWj1DULK5TN9tgTr8q3rK3L+DCdhKo2vPLq\n"
					   "41RjFx4qZVyNpgaqMANNsJGL+2yivb5765XflQzNJszx5cZwr5vdHA8bn6yo24Ja\n"
					   "1sYqbgVW3h+SznLfkbZFxx71EvWA/AyoCOpPdUZ73aL7f8fXotgt6+HrCvpVwrFe\n"
					   "f+miYIJOEcu6KZLHd+QBLUJ1wQhF6GvksTlJiwLeG/8KHno0L+4kJX9OS5YJj2l5\n"
					   "ISvKLYVxp6dw7UOnsvvELXhEzzh/q7IKkmL2ptKJaPMlBqheoBTpfGzrOQwY50cR\n"
					   "eGyOwfyG95sIv0L7Lz43ZChUusBPa3d0Xx+GM3+6G3yY26XHv38blfDeKUZavtzm\n"
					   "mytcLKAtIs7HmlMaqxmH5HTuuF3X4+SYhKDx9pLDgpUsEEtODEUoyzoQMeWuJwtG\n"
					   "oJx4fWosxVT7PFz6zjikZRoR/AxNc1N9jVbMCJIOF7fzgTqS7llY+SBuVbqf0pAu\n"
					   "H6vp0zEVjlxMS8aaTrC1EHoLUWe7Yt5EF1wRQI2Ao7UESnU8X7mC4CG+M4RMsL3X\n"
					   "wUU3X5IE/jA2zyCNwI/CryjM8YvGYlp9mUc60luJbLBg3ejLGotrNGlAdhMfEbsm\n"
					   "3Em50jw0ukl/mvoMr3zLBcQ=\n"
					   "-----END CERTIFICATE-----";

const char my_key[]  = "-----BEGIN RSA PRIVATE KEY-----\n"
					   "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\n"
					   "-----END RSA PRIVATE KEY-----";

#ifndef _CERTIFICATES_H_
#define _CERTIFICATES_H_

#ifdef __cplusplus
extern "C"
{
#endif

/* This file is auto-generated by the pycert_bearssl tool.  Do not change it manually.
 * Certificates are BearSSL br_x509_trust_anchor format.  Included certs:
 *
 * Index:    0
 * Label:    192.168.80.2
 * Subject:  1.2.840.113549.1.9.1=webmaster@mac.dk,CN=192.168.80.2,O=Mac,L=Aabenraa,ST=Syddanmark,C=DK
 */

#define TAs_NUM 1

static const unsigned char TA_DN0[] = {
		0x30, 0x7b, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
		0x02, 0x44, 0x4b, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x08,
		0x0c, 0x0a, 0x53, 0x79, 0x64, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x72, 0x6b,
		0x31, 0x11, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x08, 0x41,
		0x61, 0x62, 0x65, 0x6e, 0x72, 0x61, 0x61, 0x31, 0x0c, 0x30, 0x0a, 0x06,
		0x03, 0x55, 0x04, 0x0a, 0x0c, 0x03, 0x4d, 0x61, 0x63, 0x31, 0x15, 0x30,
		0x13, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x0c, 0x31, 0x39, 0x32, 0x2e,
		0x31, 0x36, 0x38, 0x2e, 0x38, 0x30, 0x2e, 0x32, 0x31, 0x1f, 0x30, 0x1d,
		0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x09, 0x01, 0x16,
		0x10, 0x77, 0x65, 0x62, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x40, 0x6d,
		0x61, 0x63, 0x2e, 0x64, 0x6b,
};

static const unsigned char TA_RSA_N0[] = {
		0xe6, 0x44, 0x37, 0x2e, 0xb3, 0x87, 0xab, 0xe8, 0xf4, 0xc3, 0xb6, 0x0f,
		0xb4, 0x81, 0xb6, 0xfa, 0xbc, 0x41, 0x6e, 0xa9, 0xee, 0x3a, 0x63, 0x6d,
		0xea, 0xdd, 0x40, 0x6c, 0xc4, 0xff, 0xef, 0x6a, 0xbe, 0xc4, 0xae, 0x2e,
		0x68, 0xe0, 0xc4, 0x29, 0xd8, 0x73, 0xae, 0x1e, 0x32, 0xad, 0xb5, 0x9a,
		0x62, 0x1c, 0x74, 0xc7, 0xf6, 0x8e, 0xd6, 0xed, 0x7d, 0x5e, 0xab, 0x0f,
		0xc3, 0xcd, 0x02, 0x9e, 0x8b, 0x3f, 0x50, 0xd8, 0xbe, 0xda, 0x69, 0x69,
		0x23, 0x1e, 0xcc, 0x59, 0xdc, 0x1d, 0xb3, 0x7c, 0x62, 0xf9, 0xaa, 0x79,
		0x77, 0x06, 0x0e, 0x42, 0x19, 0xfb, 0xf9, 0x0d, 0x2a, 0xa8, 0x12, 0xfe,
		0xe8, 0xe6, 0x1c, 0x8d, 0xf7, 0x21, 0x3f, 0xc8, 0x15, 0x38, 0xed, 0x31,
		0xd6, 0x2a, 0x1b, 0x40, 0x97, 0x7a, 0x15, 0xf5, 0xe9, 0x8d, 0xb9, 0x97,
		0xe0, 0x6a, 0xca, 0xf6, 0x48, 0x65, 0x25, 0x47, 0x44, 0xfd, 0xd1, 0x3b,
		0xc8, 0xc9, 0xcc, 0x09, 0xa2, 0x48, 0x0e, 0x9c, 0x27, 0x50, 0x8e, 0xf3,
		0xfe, 0xb2, 0x5e, 0x4f, 0x2f, 0x06, 0xf1, 0x46, 0xb1, 0xa0, 0x93, 0xb0,
		0xc9, 0xfd, 0x14, 0xb5, 0x19, 0x0b, 0x0d, 0x85, 0x26, 0xb5, 0x46, 0x40,
		0xd1, 0xf7, 0xaf, 0xd5, 0x78, 0x1f, 0xc5, 0x31, 0x26, 0x9f, 0x10, 0x86,
		0x6f, 0x14, 0x70, 0xc6, 0x10, 0x6c, 0xfa, 0x8b, 0xb7, 0x02, 0x80, 0x97,
		0xae, 0x49, 0x6b, 0xe3, 0xf6, 0x7d, 0x4b, 0xfe, 0xa4, 0x5d, 0x4f, 0x04,
		0xbd, 0xec, 0xd3, 0x00, 0x55, 0x8a, 0x58, 0x9e, 0x24, 0x1c, 0x92, 0x93,
		0x71, 0x4f, 0x86, 0x2a, 0x7a, 0xe5, 0x2c, 0x08, 0xf7, 0xf8, 0xb2, 0x05,
		0xa1, 0x03, 0x7c, 0xf0, 0x5a, 0xc2, 0xe6, 0xc4, 0x32, 0x89, 0x4d, 0xa5,
		0xd8, 0x6e, 0x62, 0x59, 0xe5, 0x9a, 0x7b, 0x09, 0xac, 0x1c, 0x88, 0xcb,
		0x45, 0xce, 0x47, 0x6c, 0x5f, 0xe8, 0x72, 0xaf, 0xdb, 0xc6, 0xe4, 0xf7,
		0x15, 0xee, 0xf6, 0x3e, 0x76, 0x51, 0xbf, 0x4c, 0x68, 0x2f, 0xba, 0x90,
		0xef, 0x95, 0x61, 0xa9, 0x6e, 0xb7, 0x22, 0x16, 0x41, 0x64, 0x98, 0xd1,
		0x66, 0x92, 0x53, 0x7e, 0x8c, 0xd4, 0x06, 0x72, 0x52, 0x88, 0xf8, 0x92,
		0xbe, 0x4d, 0xa1, 0xf2, 0x2c, 0x20, 0x7b, 0x0c, 0xf1, 0x79, 0x2e, 0xc2,
		0xdc, 0x0a, 0x15, 0x2c, 0xdb, 0x68, 0x06, 0x89, 0xd5, 0xa6, 0xe1, 0x73,
		0xd8, 0xf4, 0x7d, 0x38, 0x28, 0xac, 0x7e, 0x74, 0xf9, 0x6c, 0x34, 0x62,
		0xc9, 0xa9, 0xd2, 0x68, 0xad, 0x3b, 0xf9, 0x5b, 0xc1, 0x41, 0xf3, 0xae,
		0x37, 0x6a, 0x43, 0xdb, 0xb3, 0x11, 0x9a, 0x10, 0x06, 0x3e, 0x5c, 0x71,
		0xbf, 0x49, 0x50, 0xe5, 0x15, 0x7c, 0x7c, 0x66, 0xcb, 0x58, 0x19, 0x85,
		0xe1, 0x0b, 0x40, 0xca, 0x95, 0xc5, 0x51, 0xe7, 0x8c, 0xd5, 0xb2, 0xa9,
		0x00, 0x97, 0xd6, 0x52, 0x2c, 0x81, 0x43, 0x02, 0x21, 0x0a, 0xf9, 0x6a,
		0x75, 0xc5, 0xec, 0x5a, 0x9b, 0xbf, 0xc9, 0xbd, 0xfc, 0x5e, 0x47, 0x12,
		0x2b, 0xfe, 0x09, 0xbc, 0xff, 0x5a, 0xe1, 0x4a, 0x01, 0x4a, 0x39, 0x95,
		0x02, 0x82, 0xf7, 0xcb, 0x30, 0x32, 0x44, 0x49, 0x17, 0x7f, 0x39, 0x1c,
		0x0b, 0x44, 0x6d, 0x6c, 0x3d, 0xcd, 0xff, 0x09, 0x38, 0xc8, 0xd4, 0xe3,
		0xcc, 0x7b, 0x5e, 0x29, 0x93, 0xa0, 0x49, 0x89, 0xb4, 0xea, 0xbe, 0x5a,
		0xd4, 0x51, 0xf6, 0x24, 0x5e, 0xb0, 0x68, 0xe1, 0x36, 0x99, 0x7c, 0x5e,
		0xd3, 0x36, 0x7a, 0x06, 0xff, 0x4d, 0x9f, 0x57, 0x1a, 0x93, 0xc9, 0x78,
		0x35, 0xc3, 0x23, 0xbf, 0xe8, 0xfe, 0xdd, 0xc9, 0x53, 0xbe, 0xf9, 0x40,
		0x1e, 0x7a, 0x2d, 0xce, 0xcc, 0x85, 0x20, 0xe6, 0x73, 0xe3, 0x1f, 0x76,
		0xf3, 0x77, 0x32, 0x9e, 0xc8, 0x4f, 0x4a, 0x93,
};

static const unsigned char TA_RSA_E0[] = {
		0x01, 0x00, 0x01,
};

static const br_x509_trust_anchor TAs[] = {
		{
				{ (unsigned char *)TA_DN0, sizeof TA_DN0 },
				BR_X509_TA_CA,
				{
						BR_KEYTYPE_RSA,
						{ .rsa = {
								(unsigned char *)TA_RSA_N0, sizeof TA_RSA_N0,
								(unsigned char *)TA_RSA_E0, sizeof TA_RSA_E0,
						} }
				}
		},
};

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* ifndef _CERTIFICATES_H_ */